version: "3.7"
services:
  moving-objects-oauth-service:
    env_file:
      - .env
    hostname: moving-objects-oauth-service
    container_name: moving-objects-oauth-service
    build:
      context: moving-objects-oauth-service/.
    depends_on:
      - mos-db
    networks:
      mos_net:
        ipv4_address: ${MOS_AIRPORTS_OAUTH_IP}

  moving-objects-rest-service:
    env_file:
      - .env
    hostname: moving-objects-rest-service
    container_name: moving-objects-rest-service
    build:
      context: moving-objects-rest-service/.
    depends_on:
      - mos-db
    networks:
      mos_net:
        ipv4_address: ${MOS_AIRPORTS_IP}

  prometheus:
    hostname: prometheus
    container_name: ias-prometheus
    build:
      context: docker-files/prometheus/.
    networks:
      mos_net:
        ipv4_address: ${MOS_PROMETHEUS_IP}

  grafana:
    hostname: grafana
    container_name: ias-grafana
    build:
      context: docker-files/grafana/.
    networks:
      mos_net:
        ipv4_address: ${MOS_GRAFANA_IP}

  influxdb:
    hostname: influxdb
    container_name: ias-influxdb
    build:
      context: docker-files/influxdb/.
    networks:
      mos_net:
        ipv4_address: ${MOS_INFLUX_IP}

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./moving-objects-gui/.
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      mos_net:
        ipv4_address: ${MOS_NGINX_IP}

  mos-db:
    hostname: mos-db
    container_name: mos-db
    image: postgres:14.2
    command: postgres -c listen_addresses='*'
    environment:
      POSTGRES_DB: mos
      POSTGRES_USER: posgres
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: mos
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 0s
    restart: on-failure
    stdin_open: true
    tty: true
    expose:
      - 5432
    networks:
      mos_net:
        ipv4_address: ${MOS_DB_IP}

networks:
  mos_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}

