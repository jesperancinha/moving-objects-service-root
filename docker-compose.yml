version: "3.7"
services:
  moving-objects-jwt-service:
    env_file:
      - .env
    environment:
      - MOS_DB_IP=${MOS_DB_IP}
    hostname: moving-objects-jwt-service
    container_name: moving-objects-jwt-service
    build:
      context: moving-objects-jwt-service/.
    depends_on:
      - mosdb
    deploy:
      resources:
        limits:
          memory: 350M
        reservations:
          memory: 350M
    networks:
      mos_net:
        ipv4_address: ${MOS_OBJECTS_JWT_IP}

  moving-objects-rest-service:
    env_file:
      - .env
    hostname: moving-objects-rest-service
    container_name: moving-objects-rest-service
    build:
      context: moving-objects-rest-service/.
    depends_on:
      - mosdb
    deploy:
      resources:
        limits:
          memory: 350M
        reservations:
          memory: 350M
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      mos_net:
        ipv4_address: ${MOS_OBJECTS_IP}

  prometheus:
    hostname: prometheus
    container_name: prometheus
    build:
      context: docker-files/prometheus/.
    networks:
      mos_net:
        ipv4_address: ${MOS_PROMETHEUS_IP}
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 50M

  grafana:
    hostname: grafana
    container_name: grafana
    build:
      context: docker-files/grafana/.
    networks:
      mos_net:
        ipv4_address: ${MOS_GRAFANA_IP}
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M

  influxdb:
    hostname: influxdb
    container_name: influxdb
    build:
      context: docker-files/influxdb/.
    networks:
      mos_net:
        ipv4_address: ${MOS_INFLUX_IP}
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 400M

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./moving-objects-gui/.
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      mos_net:
        ipv4_address: ${MOS_NGINX_IP}
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M

  mosdb:
    hostname: mosdb
    container_name: mosdb
    image: postgres:14.5
    command: -c 'max_connections=400' -c 'shared_buffers=100MB'
    volumes:
      - ./docker-files/docker-psql:/docker-entrypoint-initdb.d
      - ./docker-files/docker-psql/multiple:/docker-entrypoint-initdb.d/multiple
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: mos
    expose:
      - "5432"
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 100M
    networks:
      mos_net:
        ipv4_address: ${MOS_DB_IP}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 0s

networks:
  mos_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}

