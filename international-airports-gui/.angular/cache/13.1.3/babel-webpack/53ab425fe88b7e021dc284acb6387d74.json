{"ast":null,"code":"import _classCallCheck from \"/Users/jofisaes/dev/src/jofisaes/international-airports-service-root/international-airports-gui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jofisaes/dev/src/jofisaes/international-airports-service-root/international-airports-gui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { catchError, map, retry } from 'rxjs/internal/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AirportCompleteService = /*#__PURE__*/(function () {\n  var AirportCompleteService = /*#__PURE__*/function () {\n    function AirportCompleteService(http) {\n      _classCallCheck(this, AirportCompleteService);\n\n      this.http = http;\n    }\n\n    _createClass(AirportCompleteService, [{\n      key: \"getAirportsPerTerm\",\n      value: function getAirportsPerTerm(term, radius) {\n        return this.http.get(\"/iairports/airportwebcams/term/\".concat(term, \"/\").concat(radius)).pipe(retry(3), catchError(this.handleError()));\n      }\n    }, {\n      key: \"getAirportPerCode\",\n      value: function getAirportPerCode(code, radius) {\n        return this.http.get(\"/iairports/airportwebcams/code/\".concat(code, \"/\").concat(radius)).pipe(retry(3), catchError(this.handleError())).pipe(map(function (airports) {\n          return airports[0];\n        }));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError() {\n        var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'operation';\n        var result = arguments.length > 1 ? arguments[1] : undefined;\n        return function (error) {\n          console.error(error);\n          console.log(\"\".concat(operation, \" failed: \").concat(error.message));\n          return of(result);\n        };\n      }\n    }]);\n\n    return AirportCompleteService;\n  }();\n\n  AirportCompleteService.ɵfac = function AirportCompleteService_Factory(t) {\n    return new (t || AirportCompleteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AirportCompleteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AirportCompleteService,\n    factory: AirportCompleteService.ɵfac,\n    providedIn: 'root'\n  });\n  return AirportCompleteService;\n})();","map":null,"metadata":{},"sourceType":"module"}