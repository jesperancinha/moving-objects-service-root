{"ast":null,"code":"import _classCallCheck from \"/Users/jofisaes/dev/src/jofisaes/international-airports-service-root/international-airports-gui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jofisaes/dev/src/jofisaes/international-airports-service-root/international-airports-gui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Metrics } from \"../../model/metrics\";\nimport * as uuid from 'uuid';\nimport { MetricsService } from \"../../service/metrics.service\";\nimport { finalize } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/metrics.service\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/select\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button-toggle\";\n\nfunction MetricsComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4.tag, \" \");\n  }\n}\n\nfunction MetricsComponent_tr_13_label_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵelementStart(1, \"mat-card\");\n    i0.ɵɵtext(2, \" Call count: \");\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" Average time: \");\n    i0.ɵɵelementStart(6, \"mat-label\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" Maximum time: \");\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \" Minimum time: \");\n    i0.ɵɵelementStart(12, \"mat-label\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" Total time: \");\n    i0.ɵɵelementStart(15, \"mat-label\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.statCount, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.statAvg, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.statMax, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.statMin, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.statTotal, \" \");\n  }\n}\n\nfunction MetricsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2, \"Measurements\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, MetricsComponent_tr_13_label_4_Template, 17, 5, \"label\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.statistics);\n  }\n}\n\nfunction MetricsComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MetricsComponent_mat_card_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\");\n    i0.ɵɵelementStart(1, \"mat-button-toggle\", 5);\n    i0.ɵɵlistener(\"click\", function MetricsComponent_mat_card_16_Template_mat_button_toggle_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.changeErrorCode();\n    });\n    i0.ɵɵtext(2, \"Refresh\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var MetricsComponent = /*#__PURE__*/(function () {\n  var MetricsComponent = /*#__PURE__*/function () {\n    function MetricsComponent(metricService) {\n      _classCallCheck(this, MetricsComponent);\n\n      this.metricService = metricService;\n      this.metrics = new Metrics();\n      this.options = [];\n      this.loading = false;\n    }\n\n    _createClass(MetricsComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.populateControls();\n      }\n    }, {\n      key: \"populateControls\",\n      value: function populateControls() {\n        var _this = this;\n\n        this.metricService.getSystemMetrics().subscribe(function (value) {\n          _this.options = [];\n\n          _this.options.push(MetricsComponent.METRIC_TAG_ALL);\n\n          _this.metrics = value;\n\n          _this.metrics.availableTags.filter(function (tag) {\n            return tag.tag === 'status';\n          }).forEach(function (tag) {\n            return tag.values.forEach(function (name) {\n              return _this.options.push({\n                tag: name,\n                value: name\n              });\n            });\n          });\n\n          _this.loadSelectedErrorMetrics();\n        });\n      }\n    }, {\n      key: \"changeErrorCode\",\n      value: function changeErrorCode() {\n        this.loadSelectedErrorMetrics();\n      }\n    }, {\n      key: \"loadSelectedErrorMetrics\",\n      value: function loadSelectedErrorMetrics() {\n        var _this2 = this;\n\n        this.loading = true;\n        this.countLoaders = 2;\n        this.metricService.getSystemMetrics(this.option).pipe(finalize(function () {\n          return _this2.countLoaders--;\n        })).subscribe(function (value) {\n          console.log(\"async-task-\" + uuid.v4());\n          _this2.statistics = value.measurements;\n          _this2.statMax = value.measurements.find(function (stat) {\n            return stat.statistic == 'MAX';\n          }).value;\n          _this2.statCount = value.measurements.find(function (stat) {\n            return stat.statistic == 'COUNT';\n          }).value;\n          _this2.statTotal = value.measurements.find(function (stat) {\n            return stat.statistic == 'TOTAL_TIME';\n          }).value;\n          _this2.statAvg = value.measurements.find(function (stat) {\n            return stat.statistic == 'TOTAL_TIME';\n          }).value.valueOf() / _this2.statCount.valueOf();\n        });\n        this.metricService.getHttpTraces().pipe(finalize(function () {\n          return _this2.countLoaders--;\n        })).subscribe(function (value) {\n          _this2.statMin = value.traces.map(function (trace) {\n            return trace.timeTaken;\n          }).sort(function (x1, x2) {\n            return x2.valueOf() - x1.valueOf();\n          })[0].valueOf() / 1000;\n        });\n      }\n    }]);\n\n    return MetricsComponent;\n  }();\n\n  MetricsComponent.METRIC_TAG_ALL = {\n    tag: \"All\",\n    value: null\n  };\n\n  MetricsComponent.ɵfac = function MetricsComponent_Factory(t) {\n    return new (t || MetricsComponent)(i0.ɵɵdirectiveInject(i1.MetricsService));\n  };\n\n  MetricsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MetricsComponent,\n    selectors: [[\"metrics-selector\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[1, \"container\"], [3, \"value\", \"selectionChange\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"value\"], [3, \"click\"]],\n    template: function MetricsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"table\");\n        i0.ɵɵelementStart(3, \"tr\");\n        i0.ɵɵelementStart(4, \"td\");\n        i0.ɵɵtext(5, \"Error Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"td\");\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Error code Metrics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 1);\n        i0.ɵɵlistener(\"selectionChange\", function MetricsComponent_Template_mat_select_selectionChange_11_listener() {\n          return ctx.changeErrorCode();\n        })(\"valueChange\", function MetricsComponent_Template_mat_select_valueChange_11_listener($event) {\n          return ctx.option = $event;\n        });\n        i0.ɵɵtemplate(12, MetricsComponent_mat_option_12_Template, 2, 2, \"mat-option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, MetricsComponent_tr_13_Template, 5, 1, \"tr\", 3);\n        i0.ɵɵelementStart(14, \"tr\");\n        i0.ɵɵtemplate(15, MetricsComponent_td_15_Template, 2, 0, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, MetricsComponent_mat_card_16_Template, 3, 0, \"mat-card\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"value\", ctx.option);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.options);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.statistics);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.countLoaders > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countLoaders <= 0);\n      }\n    },\n    directives: [i2.MatFormField, i2.MatLabel, i3.MatSelect, i4.NgForOf, i4.NgIf, i5.MatOption, i6.MatCard, i7.MatButtonToggle],\n    styles: [\".card[_ngcontent-%COMP%]{align-content:center}input[_ngcontent-%COMP%]{margin:8px}.filters[_ngcontent-%COMP%]{float:right}.center[_ngcontent-%COMP%]{text-align:center}td[_ngcontent-%COMP%]{padding:10px}  .custom-slider .ng5-slider .ng5-slider-bar{background:#0095ff;height:2px}  .custom-slider .ng5-slider .ng5-slider-pointer{width:32px;height:16px;top:auto;bottom:2px;background-color:#0095ff;border-top-left-radius:0;border-top-right-radius:0}  .custom-slider .ng5-slider .ng5-slider-pointer:after{display:none}  .custom-slider .ng5-slider .ng5-slider-bubble{bottom:14px}  .custom-slider .ng5-slider .ng5-slider-tick{width:1px;height:10px;margin-left:4px;border-radius:0;background:#ffe4d1;top:-1px;color:#0095ff}\"]\n  });\n  return MetricsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}