buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.2")
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'application'
}

version '1.0.0'
group 'org.jesperancinha.objects'

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

applicationDefaultJvmArgs = ["-XX:+AllowRedefinitionToAddDeleteMethods"]

configurations {
    testCompile
}

repositories {
    mavenLocal()
    mavenCentral()
}

bootJar {
    mainClassName = 'org.jesperancinha.objects.ObjectsSupportLauncher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    jvmArgs '-XX:+AllowRedefinitionToAddDeleteMethods'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

bootJar {
    archiveFileName = project.name + '.jar'
}

dependencies {
    implementation('org.springframework.data:spring-data-commons:2.7.2')
    implementation('org.springframework.boot:spring-boot-starter-actuator:2.7.2')
    implementation('org.springframework.boot:spring-boot-starter-webflux:2.7.2')
    implementation('jakarta.json.bind:jakarta.json.bind-api:3.0.0')
    implementation('io.micrometer:micrometer-core:1.9.3')
    if (project.hasProperty('prod')) {
        implementation("com.okta.spring:okta-spring-boot-starter:2.1.5")
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3")
        implementation("me.paulschwarz:spring-dotenv:2.5.4")
        implementation("org.springframework.security:spring-security-web:5.7.2")
        implementation("org.jesperancinha.objects:moving-objects-security-dsl:1.0.0")
    }
    implementation('io.micrometer:micrometer-registry-prometheus:1.9.3')
    implementation("org.springdoc:springdoc-openapi-webflux-ui:1.6.10")
    compileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompile('org.projectlombok:lombok:1.18.24')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
    testImplementation('org.projectlombok:lombok:1.18.24')
    testCompile('jakarta.json.bind:jakarta.json.bind-api:3.0.0')
    testImplementation('org.assertj:assertj-core:3.23.1')
    testImplementation('org.springframework:spring-test:5.3.22')
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.2')
    testImplementation('com.github.tomakehurst:wiremock:2.27.2')
    testImplementation('io.projectreactor.tools:blockhound-junit-platform:1.0.6.RELEASE')
    testImplementation('org.mockito:mockito-junit-jupiter:4.7.0')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.0'
}
