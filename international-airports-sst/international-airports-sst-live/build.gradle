buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.1")
    }
}

plugins {
    id 'java'
    id 'application'
    id 'nebula.optional-base' version '7.0.0'
    id 'nebula.provided-base' version '7.0.0'
    id 'org.springframework.boot' version '2.7.1'
    id 'jacoco'

}

version '1.0.0'
group 'org.jesperancinha.airports'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nebula.provided-base'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'


bootJar {
    mainClassName = 'org.jesperancinha.airports.sst.live.AirportsSSTLiveLauncher'
}

repositories {
    flatDir {
        dirs 'libs', '../international-airports-sst-data/build/libs'
        dirs 'libs', '../international-airports-sst-client/international-airports-sst-client-airports/build/libs'
        dirs 'libs', '../international-airports-sst-client/international-airports-sst-client-common/build/libs'
        dirs 'libs', '../international-airports-sst-client/international-airports-sst-client-webcam/build/libs'
    }
    mavenLocal()
    mavenCentral()
}

ext['kotlin-coroutines.version'] = '1.3.2'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        }
    }
    repositories {
        mavenLocal()
    }
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
}
dependencies {
    implementation('org.jesperancinha.airports:international-airports-sst-client-common:1.0.0')
    implementation('org.jesperancinha.airports:international-airports-sst-client-airports:1.0.0')
    implementation('org.jesperancinha.airports:international-airports-sst-client-webcam:1.0.0')
    implementation('org.jesperancinha.airports:international-airports-sst-data:1.0.0')
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.5.2.RELEASE')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8')
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.jesperancinha.airports:international-airports-sst-client-airports:1.0.0')
    implementation('org.jesperancinha.airports:international-airports-sst-client-webcam:1.0.0')
    implementation('org.jesperancinha.airports:international-airports-sst-data:1.0.0')
    implementation('com.squareup.okhttp:okhttp:2.7.5')
    implementation('com.google.code.gson:gson:2.9.0')
    implementation('io.micrometer:micrometer-core:1.9.0')
    implementation('io.micrometer:micrometer-registry-prometheus:1.9.0')
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.7.1')
}
